"use strict";(self.webpackChunkforever_rwa=self.webpackChunkforever_rwa||[]).push([[3355],{79578:(r,t,c)=>{c.d(t,{rr:()=>s});var n=c(86511);const a="0x313ce567",e=[],o=[{type:"uint8"}];async function s(r){return(0,n.readContract)({contract:r.contract,method:[a,e,o],params:[]})}},3355:(r,t,c)=>{c.d(t,{getCurrencyMetadata:()=>I});var n=c(28887),a=c(27059),e=c(86511);const o="0x06fdde03",s=[],d=[{type:"string"}];async function i(r){return(0,a.n)((()=>async function(r){return(0,e.readContract)({contract:r.contract,method:[o,s,d],params:[]})}(r)),{cacheKey:`${r.contract.chain.id}:${r.contract.address}:name`,cacheTime:Number.POSITIVE_INFINITY})}const u="0x95d89b41",m=[],y=[{type:"string"}];async function h(r){return(0,a.n)((()=>async function(r){return(0,e.readContract)({contract:r.contract,method:[u,m,y],params:[]})}(r)),{cacheKey:`${r.contract.chain.id}:${r.contract.address}:symbol`,cacheTime:Number.POSITIVE_INFINITY})}var f=c(79578);async function I(r){if((0,n.dw)(r.contract.address))return{name:"Ether",symbol:"ETH",decimals:18,...r.contract.chain.nativeCurrency};try{const[t,c,n]=await Promise.all([i(r).catch((()=>"")),h(r),(0,f.rr)(r)]);return{name:t,symbol:c,decimals:n}}catch{throw new Error("Invalid currency token")}}}}]);
//# sourceMappingURL=3355.6fd8307f.chunk.js.map