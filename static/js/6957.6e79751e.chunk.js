"use strict";(self.webpackChunkforever_rwa=self.webpackChunkforever_rwa||[]).push([[6957],{6957:(e,a,t)=>{t.d(a,{autoConnectInjectedWallet:()=>w,connectInjectedWallet:()=>m});var n=t(33998),r=t(9893),s=t(83423),o=t(3340),c=t(93300),i=t(49026),d=t(55881),h=t(28902);function u(e){const a=(0,h.injectedProvider)(e);if(!a)throw new Error(`No injected provider found for wallet: "${e}"`);return a}async function m(e,a,t){const n=u(e),o=(await n.request({method:"eth_requestAccounts"}))[0];if(!o)throw new Error("no accounts available");const c=(0,s.bv)(o),i=await n.request({method:"eth_chainId"}).then(d.A);let h=a.chain&&a.chain.id===i?a.chain:(0,r.Q4)(i);return a.chain&&a.chain.id!==i&&(await y(n,a.chain),h=a.chain),p(n,c,h,t)}async function w(e,a,t){const n=u(e),o=(await n.request({method:"eth_accounts"}))[0];if(!o)throw new Error("no accounts available");const c=(0,s.bv)(o),i=await n.request({method:"eth_chainId"}).then(d.A);return p(n,c,t&&t.id===i?t:(0,r.Q4)(i),a)}function l(e,a){const t={address:(0,s.bv)(a),async sendTransaction(a){return{transactionHash:await e.request({method:"eth_sendTransaction",params:[{accessList:a.accessList,value:a.value?(0,o.cK)(a.value):void 0,gas:a.gas?(0,o.cK)(a.gas):void 0,from:this.address,to:a.to,data:a.data}]})}},async signMessage(a){let{message:n}=a;if(!t.address)throw new Error("Provider not setup");const r="string"===typeof n?(0,o.i3)(n):n.raw instanceof Uint8Array?(0,o.EY)(n.raw):n.raw;return await e.request({method:"personal_sign",params:[r,t.address]})},async signTypedData(a){if(!e||!t.address)throw new Error("Provider not setup");const r=(0,c.y)(a),{domain:s,message:o,primaryType:i}=r,d={EIP712Domain:(0,n.H4)({domain:s}),...r.types};(0,n.$$)({domain:s,message:o,primaryType:i,types:d});const h=(0,n.v8)({domain:s??{},message:o,primaryType:i,types:d});return await e.request({method:"eth_signTypedData_v4",params:[t.address,h]})},watchAsset:async a=>await e.request({method:"wallet_watchAsset",params:a},{retryCount:0})};return t}async function p(e,a,t,n){const o=l(e,a);async function c(){!async function(){e.removeListener("accountsChanged",i),e.removeListener("chainChanged",h),e.removeListener("disconnect",c)}(),n.emit("disconnect",void 0)}function i(a){if(a[0]){const t=l(e,(0,s.bv)(a[0]));n.emit("accountChanged",t),n.emit("accountsChanged",a)}else c()}function h(e){const a=(0,r.Q4)((0,d.A)(e));n.emit("chainChanged",a)}return e.on&&(e.on("accountsChanged",i),e.on("chainChanged",h),e.on("disconnect",c)),[o,t,c,a=>y(e,a)]}async function y(e,a){const t=(0,o.cK)(a.id);try{await e.request({method:"wallet_switchEthereumChain",params:[{chainId:t}]})}catch(n){if(4902!==n?.code&&4902!==n?.data?.originalError?.code)throw n;{const n=await(0,r.PB)(a);await e.request({method:"wallet_addEthereumChain",params:[{chainId:t,chainName:n.name,nativeCurrency:n.nativeCurrency,rpcUrls:(0,i.k)(n),blockExplorerUrls:n.explorers?.map((e=>e.url))}]})}}}}}]);
//# sourceMappingURL=6957.6e79751e.chunk.js.map